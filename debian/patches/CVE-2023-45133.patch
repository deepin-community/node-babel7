Description: Only evaluate own String/Number/Math methods
Author: Nicol√≤ Ribaudo <https://github.com/nicolo-ribaudo>
Origin: upstream, commit:b13376b
Bug: https://github.com/babel/babel/pull/16033
Bug-Debian: https://bugs.debian.org/1053880
Forwarded: not-needed
Applied-Upstream: 7.23.2, commit:b13376b
Reviewed-By: Yadd <yadd@debian.org>
Last-Update: 2023-10-13

--- a/packages/babel-traverse/src/path/evaluation.ts
+++ b/packages/babel-traverse/src/path/evaluation.ts
@@ -443,7 +443,10 @@
         if (type === "string" || type === "number") {
           // @ts-ignore todo(flow->ts): consider checking ast node type instead of value type
           context = object.node.value;
-          func = context[property.node.name];
+          const key = property.node.name;
+          if (Object.hasOwnProperty.call(context, key)) {
+            func = context[key as keyof typeof context];
+          }
         }
       }
     }
--- a/packages/babel-traverse/test/evaluation.js
+++ b/packages/babel-traverse/test/evaluation.js
@@ -152,6 +152,12 @@
     expect(eval_invalid_call.confident).toBe(false);
   });
 
+  if("should not evaluate inherited methods", function () {
+    const path = getPath("Math.hasOwnProperty('min')");
+    const evalResult = path.get("body.0.expression").evaluate();
+    expect(evalResult.confident).toBe(false);
+  });
+
   it("should not deopt vars in different scope", function () {
     const input =
       "var a = 5; function x() { var a = 5; var b = a + 1; } var b = a + 2";
